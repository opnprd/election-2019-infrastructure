AWSTemplateFormatVersion: "2010-09-09"
Description: Election App Infrastructrure Stack
Parameters:
  BucketName:
    Type: String
    Default: odileeds-uk-election-2019
  CodeVersion:
    Type: String
Resources:
  ElectionData:
    Type: AWS::S3::Bucket
    Properties: 
      # AccessControl: String  
      BucketName: !Ref BucketName
      NotificationConfiguration: 
        LambdaConfigurations: 
          - Event: 's3:ObjectCreated:*'
            Filter:
              S3Key: 
                Rules:
                  - Name: prefix
                    Value: results/
                  - Name: suffix
                    Value: .json
            Function: !GetAtt DataProcessingFunction.Arn
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
  TriggerDataProcessingPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref DataProcessingFunction
      Principal: s3.amazonaws.com
      SourceArn: !Sub arn:aws:s3:::${BucketName}

  DataCollector:
    Type: AWS::IAM::Group
    Properties:
      GroupName: !Join ['-', [!Ref 'AWS::Region', 'election-data-collector']]
      Path: /election-2019/
  CollectionPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Join ['-', [!Ref 'AWS::Region', 'data-collection']]
      Path: /election-2019/
      Description: Allows creation and update of election results
      Groups:
        - !Ref DataCollector
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 's3:PutObject'
              - 's3:GetObject'
            Resource: !Join ['/', [!GetAtt ElectionData.Arn, 'results', '*']]
  DataProcessor:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Join ['-', [!Ref 'AWS::Region', 'election-data-processor']]
      Path: /election-2019/
      Description: Role to enable data processing
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
  ProcessingPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Join ['-', [!Ref 'AWS::Region', 'data-processing']]
      Path: /election-2019/
      Description: Allows summarisation and processing election results
      Roles:
        - !Ref DataProcessor
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 's3:GetObject'
            Resource: !Join ['/', [!GetAtt ElectionData.Arn, 'results', '*']]
          - Effect: Allow
            Action:
              - 's3:ListBucket'
            Resource: !GetAtt ElectionData.Arn
          - Effect: Allow
            Action:
              - 's3:PutObject'
              - 's3:PutObjectAcl'
            Resource: !Join ['/', [!GetAtt ElectionData.Arn, 'processed', '*']]
  DataProcessingFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: odileeds-code-staging
        S3Key: election-2019/lambda.zip
        S3ObjectVersion: !Ref CodeVersion
      Description: Processing Election Results data
      Handler: lambda.enrich
      Role: !GetAtt DataProcessor.Arn
      Runtime: nodejs12.x
